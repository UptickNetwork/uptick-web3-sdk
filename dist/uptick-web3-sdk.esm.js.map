{"version":3,"file":"uptick-web3-sdk.esm.js","sources":["../src/index.js"],"sourcesContent":["\n\nimport {\n\tsetProvider,\n    getMyBalance,\n    transfer,\n    transferFrom ,\n    onSale,\n    onSaleBatch,\n    couponOnSale,\n    offSale,\n    offSaleBatch,\n    revokeApprovesWithArray,\n    orderPay,\n    getAccountInfo,\n    getUptickAddress,\n    setContractAddress,\n    mintNft,\n    placeOrder,\n    auction_onsale ,\n    auction_placeBid,\n    auction_end,\n    getTokenBalance,\n    createOffer,\n    cancelOffer,\n    acceptOffer,\n    lazyNftMint,\n    uptickToPolygon,\n    getFeeByChainID,\n    setBridgeApproval\n\n} from '@/ethereum/evm/index';\n\n\nlet chainName = \"UPTICK EVM\";\n\n\nexport function wallet() {\n    let wt = {\n            getMyBalance: getMyBalance,\n            transfer: transfer,\n            transferFrom: transferFrom,\n            onSale: onSale,\n            onSaleBatch:onSaleBatch,\n            couponOnSale:couponOnSale,\n            offSale : offSale,\n            offSaleBatch:offSaleBatch,\n            revokeApprovesWithArray: revokeApprovesWithArray,\n            orderPay: orderPay,\n            getAccountInfo: getAccountInfo,\n            getUptickAddress: getUptickAddress,\n            setContractAddress: setContractAddress,\n            mintNft:mintNft,\n            placeOrder:placeOrder,\n            auction_onsale:auction_onsale,\n            auction_placeBid:auction_placeBid,\n            auction_end: auction_end,\n            getTokenBalance: getTokenBalance,\n            createOffer :createOffer,\n            cancelOffer : cancelOffer,\n            acceptOffer : acceptOffer,\n            lazyNftMint : lazyNftMint,\n            uptickToPolygon : uptickToPolygon,\n            getFeeByChainID:getFeeByChainID,\n            setBridgeApproval: setBridgeApproval,\n\t\t\tsetWalletConnect:setWalletConnect,\n        };\n    \n    return wt;\n};\n\nexport function init(rpc,chainId) {\n \n\tsetProvider(rpc,chainId)\n    \n\treturn {wallet:wallet()}\n}\n\n\n"],"names":["wallet","wt","getMyBalance","transfer","transferFrom","onSale","onSaleBatch","couponOnSale","offSale","offSaleBatch","revokeApprovesWithArray","orderPay","getAccountInfo","getUptickAddress","setContractAddress","mintNft","placeOrder","auction_onsale","auction_placeBid","auction_end","getTokenBalance","createOffer","cancelOffer","acceptOffer","lazyNftMint","uptickToPolygon","getFeeByChainID","setBridgeApproval","setWalletConnect","init","rpc","chainId","setProvider"],"mappings":";;AAqCO,SAASA,MAAMA,GAAG;EACrB,IAAIC,EAAE,GAAG;IACDC,YAAY,EAAEA,YAAY;IAC1BC,QAAQ,EAAEA,QAAQ;IAClBC,YAAY,EAAEA,YAAY;IAC1BC,MAAM,EAAEA,MAAM;IACdC,WAAW,EAACA,WAAW;IACvBC,YAAY,EAACA,YAAY;IACzBC,OAAO,EAAGA,OAAO;IACjBC,YAAY,EAACA,YAAY;IACzBC,uBAAuB,EAAEA,uBAAuB;IAChDC,QAAQ,EAAEA,QAAQ;IAClBC,cAAc,EAAEA,cAAc;IAC9BC,gBAAgB,EAAEA,gBAAgB;IAClCC,kBAAkB,EAAEA,kBAAkB;IACtCC,OAAO,EAACA,OAAO;IACfC,UAAU,EAACA,UAAU;IACrBC,cAAc,EAACA,cAAc;IAC7BC,gBAAgB,EAACA,gBAAgB;IACjCC,WAAW,EAAEA,WAAW;IACxBC,eAAe,EAAEA,eAAe;IAChCC,WAAW,EAAEA,WAAW;IACxBC,WAAW,EAAGA,WAAW;IACzBC,WAAW,EAAGA,WAAW;IACzBC,WAAW,EAAGA,WAAW;IACzBC,eAAe,EAAGA,eAAe;IACjCC,eAAe,EAACA,eAAe;IAC/BC,iBAAiB,EAAEA,iBAAiB;IAC7CC,gBAAgB,EAACA;GACX;EAEL,OAAO3B,EAAE;AACb;AAEO,SAAS4B,IAAIA,CAACC,GAAG,EAACC,OAAO,EAAE;EAEjCC,WAAW,CAACF,GAAG,EAACC,OAAO,CAAC;EAExB,OAAO;IAAC/B,MAAM,EAACA,MAAM;GAAG;AACzB;;;;"}